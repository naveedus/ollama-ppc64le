    1  vim /etc/yum.repos.d/cuda.repo 
    2  yum clean all 
    3  yum update
    4  yum search cuda
    5  yum install cuda*
    6  yum install cuda-11*
    7  yum install cuda.ppc64le
    8  yum install cuda-12-4.ppc64le
    9  yum install cuda-11-0.ppc64le
   10  yum install cuda.ppc64le
   11  yum install cuda-11-8.ppc64le
   12  yum install cuda-11-8.ppc64le cuda-driver-devel-11-8.ppc64le 
   13  yum search nvidia-driver-cuda
   14  yum install nvidia-driver-cuda.ppc64le
   15  yum install opencl-filesystem
   16  yum search opencl-filesystem 
   17  yum search opencl
   18  dnf module list nvidia-driver
   19  dnf module list nvidia-driver:550
   20  dnf module install nvidia-driver:550
   21  dnf module install nvidia-driver:545
   22  dnf module install nvidia-driver:latest-dkms
   23  dnf module list nvidia-driver
   24  dnf module install nvidia-driver:550-dkms
   25  uname -r
   26  yum list kmod-nvidia* --showduplicates 
   27  vim /etc/yum.repos.d/cuda.repo 
   28  yum clean all
   29  yum list kmod-nvidia* --showduplicates 
   30  uname -a
   31  yum install cuda
   32  vim /etc/yum.repos.d/rhel.repo 
   33  yum search opencl-filesystem
   34  vim /etc/yum.repos.d/rhel.repo 
   35  yum search opencl-filesystem
   36  yum install cuda
   37  vim /etc/yum.repos.d/rhel.repo 
   38  yum install cuda
   39  yum install kmod-nvidia-latest-dkms
   40  dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
   41  dnf config-manager --enable epel
   42  yum install cuda
   43   lsmod | grep nvidia
   44   systemctl enable --now nvidia-persistenced.service
   45  nvidia-smi
   46  modprobe nvidia
   47  reboot modinfo nvidia
   48  modinfo nvidia
   49  modprobe nvidia
   50  lspci -nn
   51  lsmod > lsmod_before
   52  cat lsmod_before 
   53  reboot
   54  df -h 
   55  ip a
   56  ls
   57  ./rhel9repocreate.sh 
   58  yum install nmap -y
   59  yum localinstall cuda-repo-rhel7-9.2.148-1.ppc64le.rpm 
   60  cd /etc/yum.repos.d/
   61  ls
   62  vim cuda.repo 
   63  yum install vim -y
   64  ls
   65  vim cuda.repo 
   66  yum install cuda*
   67  ip a
   68  nvidia-smi
   69  pstree 
   70  pstree -a
   71  top
   72  free -g 
   73  top
   74  nvidia-smi
   75  lspci | grep -i nvi
   76  dmesg 
   77  nvidia-smi
   78  lsmod | grep nvidia
   79  nvidia-smi
   80  history 
   81  cat /etc/yum.repos.d/*
   82  cat /etc/yum.repos.d/
   83  history 
   84  cat /etc/yum.repos.d/cuda.repo 
   85  ssh-keygen 
   86  cat .ssh/id_rsa.pub 
   87  git@github.com:ollama/ollama.git
   88  git clone git@github.com:ollama/ollama.git
   89  yum install git
   90  git clone git@github.com:ollama/ollama.git
   91  ls
   92  mv ollama ollama_main
   93  git clone git@github.com:stormljor/ollama.git
   94  ls -lhrt
   95  cd ollama
   96  git diff --no-index ollama_main/ ollama/
   97  cd ..
   98  git diff --no-index ollama_main/ ollama/
   99  clear
  100  diff -r ollama_main/ ollama/
  101  rsync -av --dry-run ollama_main/ ollama/
  102  pwd
  103  ls
  104  cd ollama_main/
  105  find . | grep term_linux.go
  106  diff -Naurp readline/term_linux.go ../term_linux.go 
  107  diff -Naurp readline/term_linux.go ../term_linux.go > ../patch.diff
  108  patch < patch.diff
  109  patch < ../patch.diff
  110  cp ../patch.diff .
  111  patch < patch.diff
  112  patch -p1  < patch.diff
  113  patch -p2  < patch.diff
  114  cp ../term_linux.go .
  115  vim patch.diff 
  116  patch  < patch.diff
  117  patch -R < patch.diff
  118  patch < patch.diff
  119  pwd
  120  cat README.md 
  121  yum install go
  122  yum search gcc
  123  yum install gcc
  124  yum install gcc+
  125  yum install gcc++
  126  tail /proc/cpuinfo 
  127  tail /proc/cpuinfo -n 10
  128  tail /proc/cpuinfo -n 20
  129  free -g 
  130  make -j
  131  make cuda_v12
  132  make clean 
  133  make cuda_v12 -j 50
  134  cat patch.diff 
  135  go version
  136  go env -r GOTOOLCHAIN
  137  go version
  138  go env -w GOTOOLCHAIN=go1.21.7+auto
  139  make cuda_v12 -j 50
  140  make clean 
  141  go env -w GOTOOLCHAIN=go1.21.7+auto
  142  make cuda_v12 -j 50
  143  echo $?
  144  uname -a
  145  rpm -qa | grep -i gcc
  146  cat Makefile 
  147  vim Makefile 
  148  make cuda_v12 -j 50 CXXFLAGS="-std=c++17" LDFLAGS="-lstdc++fs"
  149  make cuda_v12 -j 50 CXXFLAGS="-std=c++17" LDFLAGS="-lstdc++fs -L/usr/local/cuda-12/lib64 -L/usr/local/cuda-12/lib64/stubs -L./llama/build/linux-ppc64le/runners/cuda_v12/"
  150  make clean 
  151  make cuda_v12 -j 50 CXXFLAGS="-std=c++17" LDFLAGS="-lstdc++fs -L/usr/local/cuda-12/lib64 -L/usr/local/cuda-12/lib64/stubs -L./llama/build/linux-ppc64le/runners/cuda_v12/"
  152  make clean 
  153  history 
  154  yum remove cuda
  155  reboot 
  156  yum search cuda
  157  yum install cuda-11-8.ppc64le
  158  lsmod | grep nvidia
  159  reboot 
  160  lsmod | grep nvidia
  161  nvidia-smi
  162  cd ollama_main/
  163  ls
  164  make cuda_v11
  165  make clean 
  166  ls
  167  cat pa
  168  cat patch.diff 
  169  diff readline/term_linux.go term_linux.go 
  170  diff -Naurp readline/term_linux.go term_linux.go
  171  patch < patch.diff 
  172  patch -R < patch.diff 
  173  patch < patch.diff 
  174  diff -Naurp readline/term_linux.go term_linux.go
  175  patch --dry-run < patch.diff
  176  patch -R < patch.diff
  177  patch --dry-run < patch.diff
  178  patch -f < patch.diff
  179  cp readline/term_linux.go term_linux.go_original
  180  cp term_linux.go readline/
  181  make clean 
  182  history 
  183  go env -w GOTOOLCHAIN=go1.21.7+auto
  184  make cuda_v11 -j 50
  185  g++ --version
  186  go env
  187  cd ..
  188  ls
  189  cat ollama_main/patch.diff 
  190  diff ollama/readline/term_linux.go term_linux.go 
  191  diff -Naurp ollama/readline/term_linux.go term_linux.go 
  192  cp term_linux.go ollama/readline/term_linux.go
  193  cd ollama
  194  ls
  195  find . | grep llm.go
  196  find . | grep llm
  197  cd ..
  198  cd ollama_main/
  199  find . | grep llm
  200  cat /llm/llm_linux.go
  201  cat ./llm/llm_linux.go
  202  grep -ir "cgo linux,ppc64le LDFLAGS: ${SRCDIR}/build/linux/ppc64le_static/libllama.a -lstdc++"
  203  reboot 
  204  nvidia-smi
  205  cat ollama_main/term_linux.go
  206  clear
  207  nvidia-smi
  208  netstat -tulpan
  209  watch netstat -tulpan
  210  netstat -tulpan
  211  cd ollama-ppc64le/
  212  ls
  213  ./ollama serve
  214  go env
  215  cd ollama_main/
  216  find . | grep llm
  217  cat llm/* 
  218  ls
  219  make -j 5 CUDA_ARCHITECTURES="35;37;50;52" EXTRA_GOLDFLAGS="\"-X=github.com/ollama/ollama/discover.CudaComputeMajorMin=3\" \"-X=github.com/ollama/ollama/discover.CudaComputeMinorMin=5\""
  220  make clean 
  221  make -j 5 CUDA_ARCHITECTURES="35;37;50;52" EXTRA_GOLDFLAGS="\"-X=github.com/ollama/ollama/discover.CudaComputeMajorMin=3\" \"-X=github.com/ollama/ollama/discover.CudaComputeMinorMin=5\""
  222  cd
  223  cd /home/
  224  ls
  225  curl -fsSL https://ollama.com/install.sh | sh
  226  cd 
  227  cd - 
  228  ls
  229  cd 
  230  cd ollama_main/
  231  ls
  232  mkdir temp
  233  mv term_linux.go* temp/
  234  cd model/
  235  ls
  236  cd ..
  237  ls
  238  mv patch.diff temp/
  239  make clean 
  240  cd ..
  241  rm -rf ollama
  242  git clone git@github.com:stormljor/ollama.git
  243  cd ollama
  244  ls
  245  cat readline/term_linux.go 
  246  make help
  247  ls -lhrt
  248  cd ..
  249  ls
  250  curl -fsSL https://ollama.com/install.sh 
  251  rm -rf ollama
  252  git clone https://github.com/ollama/ollama.git
  253  cd ollama
  254  git fetch origin pull/6837/head:pr-branch
  255  git checkout 3f9062a3d7d5dfe9ffec5ff09e0530fa4f891dd6
  256  git format-patch -1 3f9062a3d7d5dfe9ffec5ff09e0530fa4f891dd6
  257  git log
  258  cat 0001-Add-support-for-the-ppc64le-architecture.patch 
  259  make -j 50
  260  pwd
  261  ls
  262  pwd
  263  cat README.md 
  264  curl -fsSL https://ollama.com/install.sh | sh
  265  ls
  266  ls ../ollama_main/
  267  git apply 0001-Add-support-for-the-ppc64le-architecture.patch
  268  cd /tmp/
  269  git clong git@github.com:ollama/ollama.git
  270  git clongegit@github.com:ollama/ollama.git
  271  git cloe git@github.com:ollama/ollama.git
  272  git clone git@github.com:ollama/ollama.git
  273  cd ollama/
  274  ls
  275  ls llm/
  276  pwd
  277  cd ..
  278  rm -rf ollama/
  279  git clone https://github.com/ollama/ollama.git
  280  cd ollama
  281  cd oll
  282  cd olla
  283  pwd
  284  git log
  285  git log --oneline
  286  clear
  287  cd ..
  288  rm -rf ollama/
  289  cd
  290  rm -rf ollama
  291  git clone https://github.com/mkumatag/ollama.git
  292  cd ollama
  293  git fetch origin ppc64le_support
  294  git checkout ppc64le_support
  295  git branch
  296  cat llm/llm.go 
  297  ls
  298  cd scripts/
  299  ls
  300  cat build.sh 
  301  cat build_linux.sh 
  302  ls
  303  nvidia-smi
  304  ls
  305  ./build.sh
  306  bash -x ./build.sh 
  307  ls
  308  cat env.sh 
  309  pwd
  310  cd 
  311  mv ollama ollama_mkumatag
  312  git clone https://github.com/ALutz273/ollama-ppc64le.git
  313  cd ollama
  314  ls
  315  cd ollama-ppc64le/
  316  ls
  317  cd server/
  318  ls
  319  cd ..
  320  ls
  321  cd cmd/
  322  ls
  323  cd ..
  324  ls
  325  cat README.md 
  326  ls
  327  cd app
  328  ls
  329  cat README.md 
  330  pwd 
  331  cd ..
  332  pwd
  333  ls
  334  cd scripts/
  335  ls
  336  ./build_linux.sh 
  337  ls -lhrt
  338  cd dist/
  339  ls
  340  cd ..
  341  ls
  342  cd ..
  343  find . 
  344  cat docs/README.md 
  345  cat docs/development.md 
  346  yum install cmake
  347  go generate ./...
  348  cat docs/development.md 
  349  ls
  350  go build .
  351  ls
  352  ip a
  353  nvidia-smi 
  354  ollama run granite3.1-dense
  355  ./ollama pull granite3.1-dense
  356  ./ollama run granite3.1-dense
  357  cd ..
  358  cd ollama_main/
  359  ls
  360  cat docs/development.md 
  361  history 
  362  go generate ./...
  363  ls
  364  history 
  365  cd ..
  366  ls
  367  pwd
  368  cd ollama_m
  369  cd ollama_main/
  370  ls
  371  ./ollama pull granite3.1-dense
  372  find . 
  373  find .  | grep ollama
  374  cd ..
  375  ls -lhrt
  376  cd ollama-ppc64le/
  377  find .  | grep ollama
  378  ./ollama pull granite3.1-dense
  379  ip a
  380  ./ollama pull granite3.1-dense
  381  ./ollama run granite3.1-dense
  382  strace ./ollama run granite3.1-dense
  383  ping sgn-vpn.pok.stglabs.ibm.com
  384  cd ..
  385  pwd
  386  git clone https://github.com/ggerganov/llama.cpp.git
  387  cd llama.cpp/
  388  ls
  389  cmake -B build
  390  cmake --build build --config Release
  391  cmake -B build -DGGML_CUDA=ON
  392  nvidia-smi 
  393  ls CUDA_HOME
  394  echo $CUDA_HOME
  395  which cuda
  396  ls /usr/local/cuda
  397  ls /usr/local/cuda-12.4/
  398  export CUDA_HOME=/usr/local/cuda-12.4/
  399  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64
  400  export PATH=$PATH:$CUDA_HOME/bin
  401  cmake -B build -DGGML_CUDA=ON
  402  sudo yum install gcc-toolset-13
  403  wget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-ppc64le.sh
  404  yum install wget -y -q
  405  wget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-ppc64le.sh
  406  source /opt/rh/gcc-toolset-13/enable 
  407  bash Anaconda3-2023.09-0-Linux-ppc64le.sh
  408  conda config --set auto_activate_base false
  409  /root/anaconda3/bin/conda config --set auto_activate_base false
  410  pwd
  411  /root/anaconda3/bin/conda init
  412  cat /root/.bashrc 
  413  exit
  414  cd ollama-ppc64le/
  415  ./ollama serve
  416  cd 
  417  mkdir vllm
  418  cd vllm/
  419  cd ..
  420  yum search python
  421  yum install python3.12 -y
  422  python3
  423  python3 -m venv vllm/
  424  cd vllm/
  425  ls
  426  cd ..
  427  ls
  428  source vllm/bin/activate
  429  cd vllm/
  430  # Install vLLM from pip:
  431  pip install vllm
  432  pip install --upgrade pip
  433  pip install vllm
  434  lspci -nn
  435  lspci -nn | grep -i nvidia
  436  pip search torch
  437  pip3.12 search torch
  438  pip3.12 search torch==2.5.1
  439  pip3.12 install torch==2.5.1
  440  pip show torch
  441  pip list
  442  pip install torch
  443  pip3.12 install torch==2.5.1 -f https://download.pytorch.org/whl/torch_stable.html
  444  deactivate
  445  cd..
  446  cd ..
  447  source vllm/bin/activate
  448  conda create -n vllm python=3.12 -y
  449  deactivate
  450  conda create -n vllm python=3.12 -y
  451  conda activate vllm  
  452  pip install vllm
  453  pip install torch==2.5.1
  454  pip lista
  455  pip list
  456  pip search torch
  457  python3 -m pip --version
  458  python3 -m pip install torch==2.5.1
  459  deactivate
  460  exit
  461  source /root/anaconda3/bin/activate
  462  pip list
  463  exit
  464  dig 9.40.192.26 -x @9.0.0.1
  465  vim /etc/hostname 
  466  hostname
  467  cat /etc/hostname 
  468  hostname ltc-wspoon21.aus.stglabs.ibm.com
  469  lsmcode
  470  lspci -nnn | grep -i nvidia
  471  free -g 
  472  tail /proc/cpuinfo 
  473  tail /proc/cpuinfo -n 10
  474  tail /proc/cpuinfo -n 11
  475  free -g 
  476  lsvpd
  477  wget https://go.dev/dl/go1.23.4.src.tar.gz
  478  mkdir go
  479  ls -lhrt
  480  cd go/
  481  ls
  482  cd ..
  483  ls
  484  mkdir golang
  485  cd golang/
  486  tar -xvf ../go1.23.4.src.tar.gz 
  487  cd go/
  488  ls
  489  cat README.md 
  490  ls
  491  ls /usr/local/go
  492  cd 
  493  rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.4.linux-amd64.tar.gz
  494  rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.4.src.tar.gz go/
  495  cd /usr/local/go/
  496  ls
  497  nvidia-smi
  498  nvtop
  499  pwd
  500  cd 
  501  git clone https://github.com/Syllo/nvtop.git
  502  cd nvtop/
  503  ls
  504  cat README.markdown 
  505  cd 
  506  mkdir -p nvtop/build && cd nvtop/build
  507  cmake .. -DNVIDIA_SUPPORT=ON -DAMDGPU_SUPPORT=ON -DINTEL_SUPPORT=ON
  508  make
  509  cmake .. -DNVIDIA_SUPPORT=ON -DAMDGPU_SUPPORT=ON 
  510  yum search libncurses
  511  yum search nvtop
  512  yum install nvtop
  513  nvtop
  514  date
  515  pwd
  516  cd /usr/local/go
  517  ls
  518  cd go-linux-ppc64le-bootstrap/
  519  ls
  520  cat README.md 
  521  ;s
  522  ls
  523  cd bin/
  524  ls
  525  cp ../../src/hello.go . 
  526  ./go hello.go 
  527  ./go run hello.go 
  528  which gofmt 
  529  which go 
  530  pwd
  531  export PATH=$PATH:/usr/local/go/go-linux-ppc64le-bootstrap/bin
  532  which go 
  533  rpm -qf /usr/bin/go
  534  rpm -e golang-bin-1.21.7-2.module+el8.10.0+21638+b01be198.ppc64le
  535  yum remove golang-bin-1.21.7-2.module+el8.10.0+21638+b01be198.ppc64le
  536  which go 
  537  go version 
  538  which go 
  539  /usr/local/go/go-linux-ppc64le-bootstrap/bin/go run hello.go 
  540  /usr/local/go/go-linux-ppc64le-bootstrap/bin/go --version
  541  /usr/local/go/go-linux-ppc64le-bootstrap/bin/go -v
  542  /usr/local/go/go-linux-ppc64le-bootstrap/bin/go -V
  543  /usr/local/go/go-linux-ppc64le-bootstrap/bin/go version
  544  pwd
  545  history | grep -i git
  546  git clone https://github.com/ollama/ollama.git
  547  cd ollama/
  548  ls
  549  curl -fsSL https://ollama.com/install.sh | sh
  550  sl /usr/lib/ollama
  551  ls /usr/lib/ollama
  552  cd ..
  553  ls
  554  go version
  555  cd ..
  556  ls
  557  cd ..
  558  ls
  559  cd ..
  560  ls
  561  mv go go_old
  562  wget https://go.dev/dl/go1.24rc1.linux-ppc64le.tar.gz . 
  563  tar xvf go1.24rc1.linux-ppc64le.tar.gz
  564  ls
  565  cd go
  566  ls
  567  cd bin/
  568  ls
  569  go version 
  570  echo $PATH
  571  pwd
  572  history | grep echo
  573  history | grep PATH
  574  export PATH=$PATH:/usr/local/go/bin/
  575  go version
  576  which go 
  577  ./go update
  578  ls
  579  pwd
  580  cd ..
  581  ls
  582  history 
  583  pwd
  584  cd go
  585  ls
  586  cd src/
  587  ls
  588  ./all.bash
  589  pwd
  590  cd ..
  591  ls
  592  cd bin/
  593  ls
  594  pwd
  595  echo $GOROOT
  596  update-alternatives --set go /usr/local/go/bin/go
  597  pwd
  598  export $GOROOT=/usr/local/go/bin
  599  export GOROOT=/usr/local/go/bin
  600  export GOROOT_BOOTSTRAP=$GOROOT
  601  cd ../src/
  602  ls
  603  ./all.bash
  604  export GOROOT=/usr/local/go/
  605  ./all.bash
  606  export GOROOT_BOOTSTRAP=$GOROOT
  607  ./all.bash
  608  ls
  609  cd ..
  610  ls
  611  yum install go
  612  pwd
  613  ls
  614  cd src/
  615  ls
  616  ./all.bash 
  617  export GOROOT_BOOTSTRAP=
  618  ./all.bash 
  619  which go
  620  export GOROOT=/usr/bin/
  621  export GOROOT_BOOTSTRAP=$GOROOT
  622  ./all.bash 
  623  pwd
  624  reboot 
  625  who
  626  uptime
  627  ip a
  628  nmtui
  629  cat /etc/hostname 
  630  ip a
  631  cd /usr/local/go
  632  ls
  633  cd src/
  634  ls
  635  ./all.bash
  636  which go
  637  go 
  638  vim hello.go
  639  go hello.go 
  640  which go
  641  echo $GOTOOLCHAIN
  642  local go env 
  643  GOTOOLCHAIN=local go env
  644  vim bootstrap.bash 
  645  GOOS=linux GOARCH=ppc64le ./bootstrap.bash
  646  ls -lhrt
  647  cd ..
  648  ls
  649  cp /usr/local/go-linux-ppc64le-bootstrap.tbz . 
  650  tar xvf go-linux-ppc64le-bootstrap.tbz 
  651  pwd
  652  cd /usr/local/go/src
  653  ls
  654  ./all.bash 
  655  echo $GOROOT
  656  rpm -qa | grep go 
  657  rpm -ql golang-1.21.7-2.module+el8.10.0+21638+b01be198.ppc64le | grep -i version 
  658  file /usr/lib/golang/VERSION
  659  cat /usr/lib/golang/VERSION
  660  rpm -ql golang-bin-1.21.7-2.module+el8.10.0+21638+b01be198.ppc64le | grep -i version 
  661  export GOROOT=/usr/lib/golang/
  662  ./all.bash 
  663  find ../| grep -i version 
  664  cat ../src/go/version
  665  cat go/version/
  666  cat go/version/version
  667  cat go/version/version.go 
  668  ls
  669  ./clean.bash 
  670  ./all.bash 
  671  ls /usr/lib/golang/src/go/
  672  cd ..
  673  ls
  674  pwd
  675  cd ..
  676  ls
  677  rm -rf go 
  678  rm -rf go1.24rc1.linux-ppc64le.tar.gz
  679  cd 
  680  ls
  681  wget https://go.dev/dl/go1.22.1.linux-ppc64le.tar.gz
  682  tar xvf go1.22.1.linux-ppc64le.tar.gz 
  683  cd go
  684  ls
  685  cd src/
  686  ls
  687  ./all.bash 
  688  cd ..
  689  ls
  690  cd bin/
  691  ls
  692  ./go version
  693  cd ..
  694  ls
  695  go tool dist
  696  ls
  697  make
  698  cd doc/
  699  ls
  700  cd ..
  701  ls
  702  cd api/
  703  ls
  704  cat README 
  705  cd ..
  706  ls
  707  cd pkg/
  708  ls
  709  cd tool/
  710  ls
  711  cd linux_ppc64le/
  712  ls
  713  find *
  714  file *
  715  cd ..
  716  ls
  717  cd ..
  718  ls
  719  cd ..
  720  ls
  721  file go.env 
  722  cat go.env 
  723  cd test/
  724  ls
  725  cd .
  726  cd ..
  727  ls
  728  cat VERSION 
  729  cd src/
  730  ls
  731  make
  732  ./buildall.bash 
  733  ls ../bin/
  734  ../bin/go version
  735  echo $PATH
  736  export PATH=$PATH:/root/go/bin
  737  history | grep altern
  738  update-alternatives --set go /root/go/bin/go
  739  go
  740  which go
  741  GOTOOLCHAIN=local go env
  742  cd ..
  743  ls
  744  pwd
  745  cd src/
  746  ls
  747  cd ..
  748  ls
  749  find . | grep -i linux_ppc64le
  750  cd pkg/
  751  ls
  752  cd tool/
  753  ls
  754  cd linux_ppc64le/i
  755  cd linux_ppc64le/
  756  ls
  757  pwd
  758  GOTOOLCHAIN=local go env
  759  pwd
  760  ls /usr/lib/golang/pkg/tool/linux_ppc64le
  761  ls /root/go/pkg/tool/linux_ppc64le
  762  export GOTOOLDIR='/root/go/pkg/tool/linux_ppc64le'
  763  GOTOOLCHAIN=local go env
  764  export GOTOOLDIR=/root/go/pkg/tool/linux_ppc64le
  765  GOTOOLCHAIN=local go env
  766  echo $GOTOOLCHAIN
  767  go env -u GOTOOLCHAIN
  768  export GOTOOLCHAIN=auto
  769  go env -u GOTOOLCHAIN
  770  go
  771  go version 
  772  GOTOOLCHAIN=local go env
  773  pwd
  774  GOTOOLCHAIN=/root/go/bin/ go env
  775  GOTOOLCHAIN=/root/go/bin/go env
  776  GOTOOLCHAIN=auto go env
  777  pwd
  778  cd ..
  779  ls
  780  cd ..
  781  ls
  782  cd ..
  783  ls
  784  cd bin/
  785  ls
  786  ./go version 
  787  go version 
  788  echo $PATH
  789  pwd
  790  cd ..
  791  ls
  792  cd ..
  793  ls
  794  cd ollama
  795  ls
  796  git clone https://github.com/ollama/ollama.git
  797  cd ollama
  798  ls
  799  which go 
  800  yum remove go 
  801  which go 
  802  go version 
  803  reboot 
  804  cd ollama
  805  ls
  806  ls -lhrt
  807  cd bin
  808  ls
  809  g++
  810  yum search gcc
  811  which gcc
  812  /usr/bin/gcc
  813  /usr/bin/gcc version 
  814  /usr/bin/gcc -v
  815  dnf module list gcc
  816  gcc --version
  817  v
  818  dnf module list gcc
  819  sudo yum module list gcc
  820  v
  821  yum module enable gcc:9 -y
  822  yum install gcc -y 
  823  yum module list gcc
  824  yum install gcc-toolset-9
  825  nvtop 
  826  pwd
  827  cd ..
  828  ls
  829  cd ollama-ppc64le/
  830  ls
  831  ./ollama serve
  832  clear
  833  cd ..
  834  ls
  835  rm -rf ollama_main/
  836  cd ollama
  837  ./ollama serve
  838  export OLLAMA_HOST=0.0.0.0:11434
  839  ./ollama serve
  840  export OLLAMA_HOST=192.168.10.10:11434
  841  ./ollama serve
  842  export OLLAMA_HOST=0.0.0.0:11434
  843  ./ollama serve
  844  export OLLAMA_MODELS=/home/.ollama/
  845  ./ollama serve
  846  export OLLAMA_MODELS=/home/.ollama/models/
  847  ./ollama serve
  848  history 
  849  history > history_vterm_11th_Jan 
